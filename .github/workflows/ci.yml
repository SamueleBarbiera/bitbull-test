name: CI

on:
    pull_request:
        branches: ["*"]
    push:
        branches: ["*"]

# env:

jobs:
    build-and-test:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repo
              uses: actions/checkout@v3

            - name: Setup pnpm
              uses: pnpm/action-setup@v2.4.0
              with:
                  version: 8.7.0

            - name: Setup Node.js environment
              uses: actions/setup-node@v3.8.1
              with:
                  node-version: 18.17.1

            - name: Get pnpm store directory
              id: pnpm-cache
              run: |
                  echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

            - name: Setup pnpm cache
              uses: actions/cache@v3
              with:
                  path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-

            - name: Install deps (with cache)
              run: pnpm install --no-frozen-lockfile --fix-lockfile

            - name: Next.js cache
              uses: actions/cache@v3
              with:
                  path: ${{ github.workspace }}/.next/cache
                  # Generate a new cache whenever packages or source files change.
                  key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
                  # If source files changed but packages didn't, rebuild from a prior cache.
                  restore-keys: |
                      ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}-

            - name: Build, lint and type-check
              run: pnpm lintCheck && pnpm build
            - uses: actions/checkout@v3
